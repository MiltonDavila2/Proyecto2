// <auto-generated />
using System;
using ApiVentas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiVentas.Migrations
{
    [DbContext(typeof(DbContextAPI))]
    partial class DbContextAPIModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiVentas.Models.Carrito", b =>
                {
                    b.Property<int>("IdCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrito"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCarrito");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("ApiVentas.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("ApiVentas.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDireccion")
                        .HasColumnType("int");

                    b.Property<int>("IdTarjeta")
                        .HasColumnType("int");

                    b.Property<string>("NumeroCompra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefDireccionIdDireccion")
                        .HasColumnType("int");

                    b.Property<int>("RefTarjetaIdTarjeta")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCompra");

                    b.HasIndex("RefDireccionIdDireccion");

                    b.HasIndex("RefTarjetaIdTarjeta");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("ApiVentas.Models.DetalleCompra", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCompra"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("RefCompraIdCompra")
                        .HasColumnType("int");

                    b.Property<int>("RefProductoIdProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalleCompra");

                    b.HasIndex("RefCompraIdCompra");

                    b.HasIndex("RefProductoIdProducto");

                    b.ToTable("DetalleCompras");
                });

            modelBuilder.Entity("ApiVentas.Models.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDireccion"));

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDireccion");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("ApiVentas.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RefCategoriaIdCategoria")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("RefCategoriaIdCategoria");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ApiVentas.Models.Tarjeta", b =>
                {
                    b.Property<int>("IdTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarjeta"));

                    b.Property<string>("Anio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreTarjeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTarjeta");

                    b.ToTable("Tarjetas");
                });

            modelBuilder.Entity("ApiVentas.Models.Compra", b =>
                {
                    b.HasOne("ApiVentas.Models.Direccion", "RefDireccion")
                        .WithMany("Compras")
                        .HasForeignKey("RefDireccionIdDireccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiVentas.Models.Tarjeta", "RefTarjeta")
                        .WithMany("Compras")
                        .HasForeignKey("RefTarjetaIdTarjeta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RefDireccion");

                    b.Navigation("RefTarjeta");
                });

            modelBuilder.Entity("ApiVentas.Models.DetalleCompra", b =>
                {
                    b.HasOne("ApiVentas.Models.Compra", "RefCompra")
                        .WithMany("RefDetalleCompra")
                        .HasForeignKey("RefCompraIdCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiVentas.Models.Producto", "RefProducto")
                        .WithMany("RefDetalleCompra")
                        .HasForeignKey("RefProductoIdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RefCompra");

                    b.Navigation("RefProducto");
                });

            modelBuilder.Entity("ApiVentas.Models.Producto", b =>
                {
                    b.HasOne("ApiVentas.Models.Categoria", "RefCategoria")
                        .WithMany("Productos")
                        .HasForeignKey("RefCategoriaIdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RefCategoria");
                });

            modelBuilder.Entity("ApiVentas.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ApiVentas.Models.Compra", b =>
                {
                    b.Navigation("RefDetalleCompra");
                });

            modelBuilder.Entity("ApiVentas.Models.Direccion", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("ApiVentas.Models.Producto", b =>
                {
                    b.Navigation("RefDetalleCompra");
                });

            modelBuilder.Entity("ApiVentas.Models.Tarjeta", b =>
                {
                    b.Navigation("Compras");
                });
#pragma warning restore 612, 618
        }
    }
}
